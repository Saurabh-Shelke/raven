import{r as a,as as x,j as U}from"./index-81db420b.js";import{M as b}from"./MultipleUserCombobox-3792d0b5.js";import{u as M}from"./EmptyState-0a5144f8.js";import{u as h}from"./WorkspaceMemberManagement-60867905.js";import"./useCurrentChannelData-5d20df6c.js";import"./useGetUserRecords-beb6efeb.js";import"./index-a9edd0f4.js";import"./useRavenSettings-a6b6461e.js";import"./preferences-0e1c8796.js";import"./DoctypeLinkRenderer-5c845fcf.js";import"./useDoctypeMeta-749cfb81.js";import"./useDebounce-02f398f3.js";import"./index-a6c096df.js";import"./TableLoader-47d8c4ae.js";import"./Skeleton-9de30e70.js";const q=({channelID:l,label:p="Select users",selectedUsers:u,setSelectedUsers:c,workspaceID:d})=>{const{data:t}=h(d),{channelMembers:r}=M(l),m=a.useContext(x),i=a.useMemo(()=>{var n,s;const o={};return t==null||t.message.forEach(e=>{o[e.user]=e.name}),(s=(n=m.enabledUsers)==null?void 0:n.filter(e=>!(r!=null&&r[e.name])&&o[e.name]))!=null?s:[]},[m.enabledUsers,r,t]),f=a.useCallback((o,n)=>{const s=n.toLowerCase();return i.filter(e=>!o.find(C=>C.name===e.name)&&(e.full_name.toLowerCase().includes(s)||e.name.toLowerCase().includes(s)))},[i]);return U.jsx(b,{selectedUsers:u,setSelectedUsers:c,getFilteredUsers:f,label:p})};export{q as default};
